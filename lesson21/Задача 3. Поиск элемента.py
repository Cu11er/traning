# Когда мы работаем с большой многоуровневой структурой, нам нередко необходимо пройтись по ней и найти нужный элемент.
# Для этого в программировании используются специальные алгоритмы поиска.
# Напишите функцию, которая находит заданный пользователем ключ в словаре и выдаёт значение этого ключа на экран.
# В качестве примера можно использовать такой словарь:
#
# site = {
#     'html': {
#         'head': {
#             'title': 'Мой сайт'
#         },
#         'body': {
#             'h2': 'Здесь будет мой заголовок',
#             'div': 'Тут, наверное, какой-то блок',
#             'p': 'А вот здесь новый абзац'
#         }
#     }
# }
#
# Пример 1:
# Искомый ключ: h2
# Значение: Здесь будет мой заголовок
#
# Пример 2:
# Искомый ключ: abc
# Такого ключа в структуре сайта нет.
site = {
    'html': {
        'head': {
            'title': 'Мой сайт'
        },
        'body': {
            'h2': 'Здесь будет мой заголовок',
            'div': 'Тут, наверное, какой-то блок',
            'p': 'А вот здесь новый абзац'
        }
    }
}

def find_key(key, data):
    if key in data:
        return data[key]

    for i_key in data.values():
        if isinstance(i_key, dict):
            result = find_key(key, i_key)
            if result:
                break
    else:
        result = None

    return result



user_input = (input('Искомый ключ: '))
value = find_key(user_input, site)
if value:
    print('Значение:', value)
else:
    print('Такого ключа нет')

