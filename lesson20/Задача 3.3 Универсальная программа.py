# Один заказчик попросил нас написать небольшой скрипт для своих криптографических нужд.
# При этом он заранее предупредил, что скрипт должен уметь работать с любым итерируемым типом данных.
# Напишите функцию, которая возвращает список из элементов итерируемого объекта
# (кортежа, строки, списка, словаря), у которых индекс чётный.
#
# Пример 1:
# Допустим, есть такая строка: 'О Дивный Новый мир!'
# Результат: ['О', 'Д', 'в', 'ы', ' ', 'о', 'ы', ' ', 'и', '!']
#
# Пример 2:
# Допустим, есть такой список: [100, 200, 300, 'буква', 0, 2, 'а']
# Результат: [100, 300, 0, 'а']
#
# Примечание: для проверки типа можно использовать функцию isinstance(<элемент>, <тип данных>),
# которая возвращает True, если элемент принадлежит к этому типу данных, и возвращает False в противном случае.

def even_index(object):
    result = [symb for index, symb in enumerate(object) if index % 2 == 0]
    return result


text_list = ['О', 'Дивный', 'Новый мир!']
text_dict = {'веселиться: грустить', 'стоять: сидеть', 'моргать: зевать', 'идти: бежать'}
text_set = {'дрыхнуть', 'спать', 'кемарить', 'тусить', 'гонять'}
text = 'Такая строка'



print('Такой список: ', text_list)
print('Результат: ', even_index(text_list))

print('\nТакое множество: ', text_set)
print('Результат: ', even_index(text_set))

print('\nТакой словарь: ', text_dict)
print('Результат: ', even_index(text_dict))

print('\nТакая строка: ', text)
print('Результат: ', even_index(text))




